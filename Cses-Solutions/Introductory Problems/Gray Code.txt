import java.io.*;
import java.util.*;
 
public class Main {
    static final FastScanner sc = new FastScanner();
    static final PrintWriter out = new PrintWriter(System.out);
    static final int MOD = (int)1e9 + 7;
    public static Integer[] dp;
    public static int[] nums;
 
    public static void main(String[] args) throws Exception {
        solve();
        out.flush();
    }
 
    public static void solve() throws Exception {
        int n = sc.nextInt();
        StringBuilder ans = new StringBuilder();
        StringBuilder sb;
 
        int total = 1 << n;
        for (int num = 0; num < total; num++) {
 
            int temp = num ^ (num >> 1);
            int cnt  = n;
            sb = new StringBuilder();
 
            while (cnt > 0) {
                sb.append(temp & 1);
                temp >>= 1;
                cnt--;
            }
            sb.reverse();
            ans.append(sb).append('\n');
        }
        out.print(ans); 
    }
    static final class FastScanner {
        private final byte[] buf = new byte[1 << 16];
        private int len, ptr;
        private final InputStream in = System.in;
 
        private int readByte() throws IOException {
            if (ptr >= len) {
                len = in.read(buf);
                ptr = 0;
                if (len <= 0) return -1;
            }
            return buf[ptr++];
        }
 
        int nextInt() throws IOException {
            int c, sign = 1, val = 0;
            do { c = readByte(); } while (c <= 32 && c != -1);
            if (c == '-') { sign = -1; c = readByte(); }
            while (c > 32 && c != -1) {
                val = val * 10 + (c - '0');
                c = readByte();
            }
            return val * sign;
        }
 
        String nextLine() throws IOException {
            int c = readByte();
            while (c == '\n' || c == '\r') c = readByte();
            StringBuilder sb = new StringBuilder();
            while (c != '\n' && c != '\r' && c != -1) {
                sb.append((char) c);
                c = readByte();
            }
            return sb.toString();
        }
 
        char nextChar() throws IOException {
            int c = readByte();
            while (c <= 32 && c != -1) c = readByte();
            return (char) c;
        }
    }
}